KEEP THE CODE UGLY BUT FAST (e.g. [0,0,1] = good. { top: false, middle: false, bottom: true} = bad.)

FEATURES
 - saboteurBlaims
 - chat/communication, promises
 - game analysis/"help me" button
 - PRECISE CHANGING KARMA, EVALUATE MOVES
 - re-evaluate past moves based on new info
 - storing how many cards were used
 - saboteurs lying what was under target card / refusing to claim
 - INITIAL STRATEGIES: digger, saboteur_aggressive, saboteur_passive, saboteur_liar
 - when human players: saboteurs spam-lies chat
 - estimatedSelfKarma/isOuted
 - 3 rounds, points (gold nuggets) for victory
 - players given names & ids
 - revealing who was who after the game & where was gold (if needed)
 - USER INTERFACE, HUMAN PLAYERS

FIXES
 - rockfall on good tunnels when a digger
 - if no coals discovered, add two possibilities to consider when reaching coal

NON-FEATURE TODOS
 - 9999 / -9999 -> infinity / negative infinity
 - pickaxe, truck, lamp -> tools: [1,1,1]
 - Math.floor -> Math.round
 - type -> cardType
 - remove "special" field
 - extract repeating code parts to functions
 - refactor deck.js to create same type cards via spread operator
 - refactor cards to test by type instead of id (e.g. cardId < 0)
 - rewrite code to assignment- instead of references-based functions (???)


 WHEN ALL FEATURES, FIXES, TODOS DONE
 - remove commented out code
 - refactor logic, simplify
 - remove useless variables, shortify the code
 - split to more files
 - go through code and improve quality
 - comments
 - jsdocs, lints, tests
 - prod version = uglify
